import ROOT as rt
import numpy as np
import plotfactory as pf
import ntup_dir as nt
from glob import glob
import sys
from pdb import set_trace
from os.path import normpath, basename
####################################################################################################
outdir = '/afs/cern.ch/work/v/vstampf/plots/recontuple/'
indir = nt.getntupdir()
####################################################################################################
ntdr = basename(normpath(indir))
####################################################################################################
t = pf.makechain(True)
####################################################################################################
####################################################################################################
pf.setpfstyle()
####################################################################################################
####################################################################################################
####################################################################################################
b_masses = np.arange(0.,11,0.1)
####################################################################################################
####################################################################################################
####################################################################################################
h_masses_eff_denom = rt.TH1F('masses_eff_denom','masses_eff_denom',len(b_masses)-1,b_masses)
h_masses_eff_numer = rt.TH1F('masses_eff_numer','masses_eff_numer',len(b_masses)-1,b_masses)
h_masses_pur_denom = rt.TH1F('masses_pur_denom','masses_pur_denom',len(b_masses)-1,b_masses)
h_masses_pur_numer = rt.TH1F('masses_pur_numer','masses_pur_numer',len(b_masses)-1,b_masses)
####################################################################################################
####################################################################################################
####################################################################################################
t.Draw('hnl_hn_MASS >> masses_eff_numer','flag_IsThereTHEDimuon == 1 & flag_matchedHNLMaxCosBPA == 1')
t.Draw('hnl_hn_MASS >> masses_eff_denom','flag_IsThereTHEDimuon == 1')
####################################################################################################
t.Draw('hnl_hn_MASS >> masses_pur_numer','flag_matchedHNLMaxCosBPA == 1')
t.Draw('hnl_hn_MASS >> masses_pur_denom','flag_matchedHNLMaxCosBPA == 1 | flag_matchedHNLMaxCosBPA == 0')
####################################################################################################
####################################################################################################
####################################################################################################
h_masses_pur_numer.Divide(h_masses_pur_denom)
h_masses_eff_numer.Divide(h_masses_eff_denom)
####################################################################################################
####################################################################################################
hlist = [h_masses_pur_numer,h_masses_eff_numer]
####################################################################################################
####################################################################################################
for h in hlist:
    h.GetXaxis().SetTitle('HNL Mass [GeV]')
    h.SetMarkerColor(rt.kBlue+2)
    h.SetTitle('Selection: MaxCosBPA')
h_masses_eff_numer.SetAxisRange(0.95,1.005,'Y')
h_masses_eff_numer.GetYaxis().SetTitle('Efficiency')
h_masses_pur_numer.GetYaxis().SetTitle('Purity')
####################################################################################################
####################################################################################################
####################################################################################################
c_masses_eff = rt.TCanvas('masses_eff','masses_eff')
c_masses_pur = rt.TCanvas('masses_pur','masses_pur')
####################################################################################################
####################################################################################################
clist = [c_masses_pur,c_masses_eff]
####################################################################################################
####################################################################################################
c_masses_eff .cd()
h_masses_eff_numer.Draw('ep')
####################################################################################################
####################################################################################################
c_masses_pur.cd()
h_masses_pur_numer.Draw('ep')
####################################################################################################
####################################################################################################
for c in clist:
    c.cd()
    pf.showlogoprelimsim('CMS')
#    rt.gStyle.SetOptStat()
    c.Modified()
    c.Update()
    c.SaveAs(outdir+c.GetTitle()+'_'+ntdr+'.root')
    c.SaveAs(outdir+c.GetTitle()+'_'+ntdr+'.png')
